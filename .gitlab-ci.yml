stages:
  - build
  - deploy

variables: &global-variables
  VERSION: 1.2.0
  VARS_JSON: variables.$CI_PIPELINE_IID.json

default:
  cache:
    paths:
      - $VARS_JSON

.deploy:
  stage: deploy
  image: alpine:latest
  only: 
    - /v\d+\.\d+\.\d+/
  except: 
    - branches
  before_script:
    - apk add zip unzip jq curl
  variables: &deploy_variables
    INJECTOR_ARCHIVE: "$(cat $VARS_JSON | jq .archive_name)"   

.build:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
  before_script:
    - apk add zip
  script: 
    - "dotnet publish -r win-x64 -c Release -o publish /p:PublishSingleFile=true"
  after_script:
    - "zip -j $INJECTOR_ARCHIVE LICENSE README.md CHANGELOG.md sample-config.ini publish/Injector.exe"
    - |
      # Update archive name var
      touch $VARS_JSON
      cat $VARS_JSON | jq '. |= .+ {"archive_name": "$INJECTOR_ARCHIVE"}' >.json; mv .json $VARS_JSON
  artifacts:
    paths:
      - $INJECTOR_ARCHIVE

master:
  extends: .build
  only:
    - master
  variables:
    INJECTOR_ARCHIVE: injector-$VERSION+$CI_PIPELINE_IID.win64.zip    
  artifacts:
    expire_in: 6 months

dev:
  extends: .build
  only:
    - branches
  except:
    - master
  variables:
    INJECTOR_ARCHIVE: injector-$VERSION+$CI_PIPELINE_IID.$CI_COMMIT_REF_SLUG.win64.zip
  artifacts:
    expire_in: 1 day

release:
  extends: .build
  only: 
    - /v\d+\.\d+\.\d+/
  except:
    - branches
  variables:
    INJECTOR_ARCHIVE: injector-$CI_COMMIT_TAG+$CI_PIPELINE_IID.win64.zip    
  artifacts:
    expire_in: 1 month    



.create_changelog_fragment: &create_changelog_fragment  
  - |
    # Parse changelog
    #
    fragment_start="## $CI_COMMIT_TAG"
    fragment_end="## v"
    sed -n "/^$fragment_start/,/^$fragment_end/ {/^$fragment_start/ {p;n}; /^$fragment_end/ q; p}" CHANGELOG.md >changelog_fragment
  - cat changelog_fragment

.create_github_release: &update_github_release
  - |
    # Create release
    #
    url=$GITHUB_API_URL/repos/turkoid/Injector/releases
    headers='-H "Accept: application/vnd.github.v3+json"'
    headers=$headers' -H "Authorization: token $GITHUB_API_TOKEN"'    
    data=$(jq -n --arg tag_name "$CI_COMMIT_TAG" --arg body "$(cat changelog_fragment)" '{"tag_name": $tag_name, "body": $body}')
    opts='-s -w "%{http_code}" -o response'
    rc=$(eval curl $opts $headers --data "$data" $url)
    if [ $rc -ne 201 ]; then
      echo http_code=$rc
      cat response | jq .
      return 1
    fi    
    upload_url=$(cat response | jq .upload_url)
    upload_url=${upload_url%\{*}
    upload_url=${upload_url#\"}
  - echo $upload_url

.upload_release_artifacts: &upload_release_artifacts
  - |
    # Upload release artifacts
    #
    artifact="$(cat $VARS_JSON | jq .)"
    url=$upload_url?name=$artifact
    headers='-H "Accept: application/vnd.github.v3+json"'
    headers=$headers' -H "Authorization: token $GITHUB_API_TOKEN"'
    headers=$headers' -H "Content-Type: application/zip"'
    opts='-s -w "%{http_code}" -o response'
    rc=$(eval curl $opts $headers --data "$data" $url)
    if [ $rc -ne 201 ]; then
      echo http_code=$rc
      cat response | jq .
      return 1
    fi   
    download_url=$(cat response | jq .browser_download_url)
  - echo $download_url

github_release:
  extends: .deploy
  script:
    - *create_changelog_fragment
    - *update_github_release
    - *upload_release_artifacts
  variables:
    <<: *deploy_variables
    GITHUB_API_URL: https://api.github.com

injector_file_bundles:
  extends: .deploy
  only:
    - test-release-job
  script:
    - |
      # Trigger downstream pipeline
      #
      url=https://gitlab.com/api/v4/projects/$INJECTOR_CONFIG_PROJECT_ID/trigger/pipeline
      echo $CI_JOB_TOKEN
      form_data='-F "token=$CI_JOB_TOKEN"'
      form_data=$form_data' -F "ref=test_gitlab_masking"'
      form_data=$form_data' -F "variables[INJECTOR_RELEASE_TAG]=$RELEASE_TAG"'
      opts='-s -w "%{http_code}" -o response -X POST'
      eval echo "curl $opts $form_data $url"
      rc=$(eval curl $opts $form_data $url)
      if [ $rc -ne 201 ]; then
        echo http_code=$rc
        cat response | jq .
        return 1
      fi   
  variables:
    <<: *deploy_variables
    RELEASE_TAG: v1.0.12
    INJECTOR_CONFIG_PROJECT_ID: 16080290
    