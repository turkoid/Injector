stages:
  - build
  - release

variables: &global-variables
  VERSION: 1.2.0

.default:
  image: alpine:latest

.build:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:3.1-alpine
  before_script:
    - apk add zip
  script: 
    - "dotnet publish -r win-x64 -c Release -o publish /p:PublishSingleFile=true"
  after_script:
    - "zip -j $INJECTOR_ARCHIVE LICENSE README.md CHANGELOG.md sample-config.ini publish/Injector.exe"
  artifacts:
    paths:
      - $INJECTOR_ARCHIVE

master:
  extends: .build
  only:
    - master
    - /v\d+\.\d+\.\d+/
  variables:
    <<: *global-variables
    INJECTOR_ARCHIVE: injector-$VERSION+$CI_PIPELINE_IID.win64.zip    
  artifacts:
    expire_in: 6 months

feature-branch:
  extends: .build
  only:
    - branches
  except:
    - master
  variables:
    <<: *global-variables
    INJECTOR_ARCHIVE: injector-$VERSION+$CI_PIPELINE_IID.$CI_COMMIT_REF_SLUG.win64.zip
  artifacts:
    expire_in: 1 day

.create_changelog_fragment: &create_changelog_fragment  
  - |
    # Parse changelog
    fragment_start="## $GITHUB_RELEASE_TAG"
    fragment_end="## v"
    sed -n "/^$fragment_start/,/^$fragment_end/ {/^$fragment_start/ {p;n}; /^$fragment_end/ q; p}" CHANGELOG.md >changelog_fragment
  - cat changelog_fragment

.create_github_release: &update_github_release
  - |
    # Create release
    data=$(jq -n --arg tag_name "$GITHUB_RELEASE_TAG" --arg body "$(cat changelog_fragment)" '{"tag_name": $tag_name, "body": $body}')
    curl -s -H "Authorization: token $GITHUB_API_TOKEN" -H "Accept: application/vnd.github.v3+json" --data "$data" $GITHUB_API_URL/repos/turkoid/Injector/releases >response
    upload_url=$(cat response | jq .upload_url)
    upload_url=${upload_url%\{*}
  - echo $upload_url

.upload_release_artifacts: &upload_release_artifacts
  - |
    # Upload release artifacts
    artifact="injector-$VERSION+$CI_PIPELINE_IID.win64.zip"
    curl -s -H "Authorization: token $GITHUB_API_TOKEN" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/zip" --data-binary @artifact $upload_url?name=$(basename artifact) >response
    download_url=$(cat response | jq .browser_download_url)
  - echo $download_url

release:
  stage: release
  extends: .default
  before_script:
    - apk add jq curl
  script:
    - *create_changelog_fragment
    - *update_github_release
    - *upload_release_artifacts
  only:
    - /v\d+\.\d+\.\d+/
  variables:
    <<: *global-variables
    GITHUB_RELEASE_TAG: $CI_COMMIT_TAG
    GITHUB_API_URL: https://api.github.com